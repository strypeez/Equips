{"version":3,"sources":["SVGIcons/MetalHelmetIcon.svg","SVGIcons/MetalArmsIcon.svg","SVGIcons/MetalChestIcon.svg","SVGIcons/MetalShoulderIcon.svg","SVGIcons/MetalShoesIcon.svg","SVGIcons/LeatherArm.svg","SVGIcons/LeatherHelmet.svg","SVGIcons/LeatherShoes.svg","SVGIcons/LeatherShoulder.svg","SVGIcons/LeatherVest.svg","SVGIcons/AxeIcon.svg","SVGIcons/DaggerIcon.svg","SVGIcons/SwordIcon.svg","SVGIcons/BowIcon.svg","SVGIcons/SpearIcon.svg","SVGIcons/EmptyMetalHelmetIcon.svg","SVGIcons/EmptyShoulderIcon.svg","SVGIcons/EmptyArmsIcon.svg","SVGIcons/EmptyChestIcon.svg","SVGIcons/EmptyShoesIcon.svg","SVGIcons/EmptySwordIcon.svg","Redux/actions.js","Types.js","Components/EquipmentTypes/Weapon.js","Components/EquipmentTypes/Helmet.js","Components/EquipmentTypes/Shoulders.js","Components/EquipmentTypes/Chest.js","Components/EquipmentTypes/Arms.js","Components/EquipmentTypes/Shoes.js","Components/Inventory.js","Components/InventoryContainer.js","Components/EquipArea.js","Components/Equipped.js","Components/EquippedContainer.js","Components/Stats.js","Components/StatsContainer.js","Components/Header.js","App.js","serviceWorker.js","Redux/reducers.js","index.js"],"names":["module","exports","EQUIP","UNEQUIP","Types","WEAPON","HELMET","SHOULDER","ARMS","CHEST","SHOES","Weapon","iconToUse","equipType","backgroundColor","name","index","atk","range","armor","weight","equipTypes","AxeIcon","SwordIcon","SpearIcon","BowIcon","DaggerIcon","MetalHelmetIcon","MetalShoulderIcon","MetalChestIcon","MetalArmsIcon","MetalShoesIcon","LeatherHelmetIcon","LeatherShoulderIcon","LeatherVestIcon","LeatherArmIcon","LeatherShoesIcon","useDrag","item","type","collect","monitor","isDragging","itemType","getItemType","dragItem","getItem","begin","console","log","drag","ref","style","width","height","justifySelf","alt","src","Helmet","Shoulders","Chest","Arms","Shoes","Inventory","inventory","unequip","useDrop","accept","drop","weapon","equippedIndex","newWeapon","fontFamily","fontWeight","fontStyle","gridColumnStart","gridRowStart","gridColumnEnd","marginTop","marginBottom","color","opacity","fontSize","display","gridTemplateColumns","gridColumnGap","gridRowGap","map","key","InventoryContainer","connect","state","dispatch","EquipArea","row","col","equipAreaType","equip","equipped","EmptyHelmetIcon","EmptyShoulderIcon","EmptyArmsIcon","EmptyChestIcon","EmptyShoesIcon","EmptyWeaponsIcon","equipAreaStyle","position","isOver","canDrop","equipAtIndex","top","left","zIndex","Equipped","gridTemplateRows","EquippedContainer","Stats","reduce","total","Number","flexDirection","alignSelf","justifyContent","StatsContainer","Header","alignItems","margin","App","className","DndProvider","backend","Backend","Boolean","window","location","hostname","match","initialState","checkDupeInventory","action","itemToCheck","filter","length","checkDupeEquipped","checkIfSomethingEquipped","slice","equips","Object","assign","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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xB,KAAM,SACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,UAER,CACExB,KAAM,MACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,GACRmB,KAAM,UAER,CACExB,KAAM,MACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,UAER,CACExB,KAAM,cACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,GACRmB,KAAM,UAER,CACExB,KAAM,gBACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,GACRmB,KAAM,YAER,CACExB,KAAM,aACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,GACRmB,KAAM,SAER,CACExB,KAAM,YACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,QAER,CACExB,KAAM,aACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPqB,KAAM,QACNpB,MAAO,EACPC,OAAQ,GAEV,CACEL,KAAM,gBACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,UAER,CACExB,KAAM,kBACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,YAER,CACExB,KAAM,cACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,SAER,CACExB,KAAM,cACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,QAER,CACExB,KAAM,eACND,gBAAiB,UACjBG,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRmB,KAAM,UAGV2D,SAAU,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,UAItDwC,GAAqB,SAAC/C,EAAOgD,GAC/B,IAAIC,EAAcD,EAAOrG,KAAKvB,KAE9B,OAA0B,IADT4E,EAAM3B,UAAU6E,QAAO,SAAAvG,GAAI,OAAIA,EAAKvB,OAAS6H,KAC/CE,OACNnD,EAAM3B,UAEP,GAAN,oBAAW2B,EAAM3B,WAAjB,CAA4B2E,EAAOrG,QAKnCyG,GAAoB,SAACpD,EAAOgD,GAC9B,IAAIC,EAAcD,EAAOrG,KAAKvB,KAE9B,OAA0B,IADT4E,EAAM3B,UAAU6E,QAAO,SAAAvG,GAAI,OAAIA,EAAKvB,OAAS6H,KAC/CE,OACNnD,EAAMO,SAENP,EAAMO,SAASX,KAAI,SAACjD,EAAMtB,GAC/B,OAAIA,IAAU2H,EAAO9H,UACZyB,EAEF,YAMT0G,GAA2B,SAACrD,EAAOgD,GACrC,MAAyC,UAArChD,EAAMO,SAASyC,EAAO9H,WACjB,gBACF8E,EADL,CAEE3B,UAAU,GAAD,oBAAM2B,EAAM3B,UAAUiF,MAAM,EAAGN,EAAO3H,QAAtC,aAAiD2E,EAAM3B,UAAUiF,MAAMN,EAAO3H,MAAQ,IAAtF,CAA0F2E,EAAMO,SAASyC,EAAO9H,aACzHqF,SAAS,GAAD,oBAAMP,EAAMO,SAAS+C,MAAM,EAAGN,EAAO9H,YAArC,CAAiD8H,EAAOrG,MAAxD,aAAiEqD,EAAMO,SAAS+C,MAAMN,EAAO9H,UAAY,OAG5G,gBACF8E,EADL,CAEE3B,UAAU,GAAD,oBAAM2B,EAAM3B,UAAUiF,MAAM,EAAGN,EAAO3H,QAAtC,aAAiD2E,EAAM3B,UAAUiF,MAAMN,EAAO3H,MAAQ,KAC/FkF,SAAS,GAAD,oBAAMP,EAAMO,SAAS+C,MAAM,EAAGN,EAAO9H,YAArC,CAAiD8H,EAAOrG,MAAxD,aAAiEqD,EAAMO,SAAS+C,MAAMN,EAAO9H,UAAY,QAqBxGqI,OAff,WAA+C,IAA/BvD,EAA8B,uDAAtB8C,GAAcE,EAAQ,uCAC5C,OAAQA,EAAOpG,MACb,KAAKrC,EACH,OAAOiJ,OAAOC,OAAO,GAAIzD,EAAOqD,GAAyBrD,EAAOgD,IAClE,KAAKxI,EACH,OAAOgJ,OAAOC,OAAO,GAAIzD,EAAlBwD,OAAA,KAAAA,CAAA,GACFxD,EADE,CAEL3B,UAAW0E,GAAmB/C,EAAOgD,GACrCzC,SAAU6C,GAAkBpD,EAAOgD,MAEvC,QACE,OAAOhD,ICjMP0D,GAAQC,aAAYJ,IAE1BK,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,OAEAI,SAASC,eAAe,SFmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.01b11d40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MetalHelmetIcon.1da46725.svg\";","module.exports = __webpack_public_path__ + \"static/media/MetalArmsIcon.c946d1a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/MetalChestIcon.e80254a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/MetalShoulderIcon.ed0188e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/MetalShoesIcon.bee49b44.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeatherArm.6a2ce7e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeatherHelmet.b8dc0507.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeatherShoes.fb5383d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeatherShoulder.b8a22ec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeatherVest.95fccc05.svg\";","module.exports = __webpack_public_path__ + \"static/media/AxeIcon.c9d4a99d.svg\";","module.exports = __webpack_public_path__ + \"static/media/DaggerIcon.9fa42cf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/SwordIcon.4e0ae922.svg\";","module.exports = __webpack_public_path__ + \"static/media/BowIcon.e774f97a.svg\";","module.exports = __webpack_public_path__ + \"static/media/SpearIcon.eed1d6a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmptyMetalHelmetIcon.565fc243.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmptyShoulderIcon.915becb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmptyArmsIcon.1fc77a33.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmptyChestIcon.0d5f7ab1.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmptyShoesIcon.89b1707b.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmptySwordIcon.ad062c20.svg\";","export const EQUIP = 'EQUIP'\nexport const UNEQUIP = 'UNEQUIP'\n\nexport function equip(index, item, equipType) {\n  return { type: EQUIP, index, item, equipType}\n}\n\nexport function unequip(index, item, equipType) {\n  return { type: UNEQUIP, index, item, equipType}\n}\n","const Types = {\n  WEAPON: 'weapon',\n  HELMET: 'helmet',\n  SHOULDER: 'shoulder',\n  ARMS: 'arms',\n  CHEST: 'chest',\n  SHOES: 'shoes'\n}\n\nexport default Types;\n","import React from 'react';\nimport Types from '../../Types';\n\nimport { useDrag } from 'react-dnd';\n\nimport MetalHelmetIcon from '../../SVGIcons/MetalHelmetIcon.svg'\nimport MetalArmsIcon from '../../SVGIcons/MetalArmsIcon.svg'\nimport MetalChestIcon from '../../SVGIcons/MetalChestIcon.svg'\nimport MetalShoulderIcon from '../../SVGIcons/MetalShoulderIcon.svg'\nimport MetalShoesIcon from '../../SVGIcons/MetalShoesIcon.svg'\nimport AxeIcon from '../../SVGIcons/AxeIcon.svg'\nimport DaggerIcon from '../../SVGIcons/DaggerIcon.svg'\nimport SwordIcon from '../../SVGIcons/SwordIcon.svg'\nimport BowIcon from '../../SVGIcons/BowIcon.svg'\nimport SpearIcon from '../../SVGIcons/SpearIcon.svg'\nimport LeatherArmIcon from '../../SVGIcons/LeatherArm.svg'\nimport LeatherHelmetIcon from '../../SVGIcons/LeatherHelmet.svg'\nimport LeatherShoesIcon from '../../SVGIcons/LeatherShoes.svg'\nimport LeatherShoulderIcon from '../../SVGIcons/LeatherShoulder.svg'\nimport LeatherVestIcon from '../../SVGIcons/LeatherVest.svg'\n\n\n\nconst Weapon = ({backgroundColor, name, index, atk, range, armor, weight, equipTypes}) => {\n\n  //styles for component\n  const weaponStyle = {\n    width: '100px',\n    height: '100px',\n    justifySelf: 'center'\n  }\n\n  //declaration of variables\n  let iconToUse;\n  let equipType;\n\n  //switch for each item\n  switch(name) {\n    case \"axe\":\n      iconToUse = AxeIcon;\n      equipType = Types.WEAPON;\n      break;\n    case \"sword\":\n      iconToUse = SwordIcon;\n      equipType = Types.WEAPON;\n      break;\n    case \"spear\":\n      iconToUse = SpearIcon;\n      equipType = Types.WEAPON;\n      break;\n    case \"bow\" :\n      iconToUse = BowIcon;\n      equipType = Types.WEAPON;\n      break;\n    case \"dagger\":\n      iconToUse = DaggerIcon;\n      equipType = Types.WEAPON;\n      break;\n    case \"metalHelmet\":\n      iconToUse = MetalHelmetIcon;\n      equipType = Types.HELMET;\n      break;\n    case \"metalShoulder\":\n      iconToUse = MetalShoulderIcon;\n      equipType = Types.SHOULDER;\n      break;\n    case \"metalChest\":\n      iconToUse = MetalChestIcon\n      equipType = Types.CHEST;\n      break;\n    case \"metalArms\":\n      iconToUse = MetalArmsIcon\n      equipType = Types.ARMS;\n      break;\n    case \"metalShoes\":\n      iconToUse = MetalShoesIcon\n      equipType = Types.SHOES;\n      break;\n    case \"leatherHelmet\":\n      iconToUse = LeatherHelmetIcon;\n      equipType = Types.HELMET;\n      break;\n    case \"leatherShoulder\":\n      iconToUse = LeatherShoulderIcon\n      equipType = Types.SHOULDER;\n      break;\n    case \"leatherVest\":\n      iconToUse = LeatherVestIcon\n      equipType = Types.CHEST;\n      break;\n    case \"leatherArms\":\n      iconToUse = LeatherArmIcon\n      equipType = Types.ARMS;\n      break;\n    case \"leatherShoes\":\n      iconToUse = LeatherShoesIcon\n      equipType = Types.SHOES;\n      break;\n    default:\n      break;\n  }\n\n  //reactDND hook for dragging\n  const [, drag] = useDrag({\n    item: {type: equipType},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      itemType: monitor.getItemType(),\n      dragItem: monitor.getItem()\n    }),\n    begin: () => {\n      console.log(equipType)\n      const weaponObject = {\n        name: name,\n        index: index,\n        atk: atk,\n        range: range,\n        armor: armor,\n        weight: weight,\n        backgroundColor: backgroundColor,\n        equipType: equipType\n      }\n      return weaponObject;\n    }\n  })\n\n  return (\n    <div\n      ref={drag}\n      style={weaponStyle}>\n      <img alt=\"Icon for weapon\" src={iconToUse}></img>\n    </div>\n  )\n}\n\nexport default Weapon;\n","import React from 'react';\nimport Types from '../../Types';\n\nimport { useDrag } from 'react-dnd';\n\nimport MetalHelmetIcon from '../../SVGIcons/MetalHelmetIcon.svg'\nimport LeatherHelmetIcon from '../../SVGIcons/LeatherHelmet.svg'\n\n\n\nconst Helmet = ({backgroundColor, name, index, atk, range, armor, weight, equipTypes}) => {\n\n  //styles for component\n  const weaponStyle = {\n    width: '100px',\n    height: '100px',\n    justifySelf: 'center'\n  }\n\n  //declaration of variables\n  let iconToUse;\n\n  //switch for each item\n  switch(name) {\n    case \"metalHelmet\":\n      iconToUse = MetalHelmetIcon;\n      break;\n    case \"leatherHelmet\":\n      iconToUse = LeatherHelmetIcon;\n      break;\n    default:\n      break;\n  }\n\n  //reactDND hook for dragging\n  const [, drag] = useDrag({\n    item: {type: Types.HELMET},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      itemType: monitor.getItemType(),\n      dragItem: monitor.getItem()\n    }),\n    begin: () => {\n\n      const weaponObject = {\n        name: name,\n        index: index,\n        atk: atk,\n        range: range,\n        armor: armor,\n        weight: weight,\n        backgroundColor: backgroundColor,\n        equipType: equipTypes\n      }\n      return weaponObject;\n    }\n  })\n\n  return (\n    <div\n      ref={drag}\n      style={weaponStyle}>\n      <img alt=\"Icon for helmet\" src={iconToUse}></img>\n    </div>\n  )\n}\n\nexport default Helmet;\n","import React from 'react';\nimport Types from '../../Types';\n\nimport { useDrag } from 'react-dnd';\n\nimport MetalShoulderIcon from '../../SVGIcons/MetalShoulderIcon.svg'\nimport LeatherShoulderIcon from '../../SVGIcons/LeatherShoulder.svg'\n\n\n\nconst Shoulders = ({backgroundColor, name, index, atk, range, armor, weight, equipTypes}) => {\n\n  //styles for component\n  const weaponStyle = {\n    width: '100px',\n    height: '100px',\n    justifySelf: 'center'\n  }\n\n  //declaration of variables\n  let iconToUse;\n\n  //switch for each item\n  switch(name) {\n    case \"metalShoulder\":\n      iconToUse = MetalShoulderIcon;\n      break;\n    case \"leatherShoulder\":\n      iconToUse = LeatherShoulderIcon\n      break;\n    default:\n      break;\n  }\n\n  //reactDND hook for dragging\n  const [, drag] = useDrag({\n    item: {type: Types.SHOULDER},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      itemType: monitor.getItemType(),\n      dragItem: monitor.getItem()\n    }),\n    begin: () => {\n\n      const weaponObject = {\n        name: name,\n        index: index,\n        atk: atk,\n        range: range,\n        armor: armor,\n        weight: weight,\n        backgroundColor: backgroundColor,\n        equipType: equipTypes\n      }\n      return weaponObject;\n    }\n  })\n\n  return (\n    <div\n      ref={drag}\n      style={weaponStyle}>\n      <img alt=\"Icon for shoulder\" src={iconToUse}></img>\n    </div>\n  )\n}\n\nexport default Shoulders;\n","import React from 'react';\nimport Types from '../../Types';\n\nimport { useDrag } from 'react-dnd';\n\n\nimport MetalChestIcon from '../../SVGIcons/MetalChestIcon.svg'\nimport LeatherVestIcon from '../../SVGIcons/LeatherVest.svg'\n\n\n\nconst Chest = ({backgroundColor, name, index, atk, range, armor, weight, equipTypes}) => {\n\n  //styles for component\n  const weaponStyle = {\n    width: '100px',\n    height: '100px',\n    justifySelf: 'center'\n  }\n\n  //declaration of variables\n  let iconToUse;\n\n  //switch for each item\n  switch(name) {\n    case \"metalChest\":\n      iconToUse = MetalChestIcon\n      break;\n    case \"leatherVest\":\n      iconToUse = LeatherVestIcon\n      break;\n    default:\n      break;\n  }\n\n  //ReactDND hook for dragging\n  const [, drag] = useDrag({\n    item: {type: Types.CHEST},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      itemType: monitor.getItemType(),\n      dragItem: monitor.getItem()\n    }),\n    begin: () => {\n\n      const weaponObject = {\n        name: name,\n        index: index,\n        atk: atk,\n        range: range,\n        armor: armor,\n        weight: weight,\n        backgroundColor: backgroundColor,\n        equipType: equipTypes\n      }\n      return weaponObject;\n    }\n  })\n\n  return (\n    <div\n      ref={drag}\n      style={weaponStyle}>\n      <img alt=\"Icon for chest\" src={iconToUse}></img>\n    </div>\n  )\n}\n\nexport default Chest;\n","import React from 'react';\nimport Types from '../../Types';\n\nimport { useDrag } from 'react-dnd';\n\nimport MetalArmsIcon from '../../SVGIcons/MetalArmsIcon.svg'\nimport LeatherArmIcon from '../../SVGIcons/LeatherArm.svg'\n\n\n\nconst Arms = ({backgroundColor, name, index, atk, range, armor, weight, equipTypes}) => {\n\n  //styles for component\n  const weaponStyle = {\n    width: '100px',\n    height: '100px',\n    justifySelf: 'center'\n  }\n\n  //declaration of variables\n  let iconToUse;\n\n  //switch for each item\n  switch(name) {\n    case \"metalArms\":\n      iconToUse = MetalArmsIcon\n      break;\n    case \"leatherArms\":\n      iconToUse = LeatherArmIcon\n      break;\n    default:\n      break;\n  }\n\n  //ReactDND hook for dragging\n  const [, drag] = useDrag({\n    item: {type: Types.ARMS},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      itemType: monitor.getItemType(),\n      dragItem: monitor.getItem()\n    }),\n    begin: () => {\n      //data that is passed to the drop area\n      const weaponObject = {\n        name: name,\n        index: index,\n        atk: atk,\n        range: range,\n        armor: armor,\n        weight: weight,\n        backgroundColor: backgroundColor,\n        equipType: equipTypes\n      }\n      return weaponObject;\n    }\n  })\n\n  return (\n    <div\n      ref={drag}\n      style={weaponStyle}>\n      <img alt=\"Icon for Arms\" src={iconToUse}></img>\n    </div>\n  )\n}\n\nexport default Arms;\n","import React from 'react';\nimport Types from '../../Types';\n\nimport { useDrag } from 'react-dnd';\n\nimport MetalShoesIcon from '../../SVGIcons/MetalShoesIcon.svg'\nimport LeatherShoesIcon from '../../SVGIcons/LeatherShoes.svg'\n\n\n\nconst Shoes = ({backgroundColor, name, index, atk, range, armor, weight, equipTypes}) => {\n\n  //styles for component\n  const weaponStyle = {\n    width: '100px',\n    height: '100px',\n    justifySelf: 'center'\n  }\n\n  //declaration of variables\n  let iconToUse;\n\n  //switch for each item\n  switch(name) {\n    case \"metalShoes\":\n      iconToUse = MetalShoesIcon\n      break;\n    case \"leatherShoes\":\n      iconToUse = LeatherShoesIcon\n      break;\n    default:\n      break;\n  }\n\n  //reactDND hook for dragging\n  const [, drag] = useDrag({\n    item: {type: Types.SHOES},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      itemType: monitor.getItemType(),\n      dragItem: monitor.getItem()\n    }),\n    begin: () => {\n\n      const weaponObject = {\n        name: name,\n        index: index,\n        atk: atk,\n        range: range,\n        armor: armor,\n        weight: weight,\n        backgroundColor: backgroundColor,\n        equipType: equipTypes\n      }\n      return weaponObject;\n    }\n  })\n\n  return (\n    <div\n      ref={drag}\n      style={weaponStyle}>\n      <img alt=\"Icon for shoes\" src={iconToUse}></img>\n    </div>\n  )\n}\n\nexport default Shoes;\n","import React from 'react';\nimport { useDrop } from 'react-dnd'\n\nimport Weapon from './EquipmentTypes/Weapon'\nimport Helmet from './EquipmentTypes/Helmet'\nimport Shoulders from './EquipmentTypes/Shoulders'\nimport Chest from './EquipmentTypes/Chest'\nimport Arms from './EquipmentTypes/Arms'\nimport Shoes from './EquipmentTypes/Shoes'\n\nimport Types from '../Types'\n\nconst Inventory = ({inventory, unequip}) => {\n\n\n  const inventoryStyle = {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'beige',\n    fontFamily: 'triplex-cond-serif,serif',\n    fontWeight: '400',\n    fontStyle: 'normal',\n    gridColumnStart: '2',\n    gridRowStart: '3',\n    gridColumnEnd: 'span 6',\n\n  }\n\n  const titleStyle = {\n    fontFamily: 'mono45-headline,monospace',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    color: \"black\",\n    opacity: \"0.2\",\n    fontSize: '50px'\n\n  }\n\n  const inventoryGridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(5, 1fr)',\n    gridColumnGap: '15px',\n    gridRowGap: '15px'\n  }\n\n\n  //reactDND hook for dropping\n  const [, drop] = useDrop({\n    accept: [Types.WEAPON, Types.ARMS, Types.CHEST, Types.HELMET, Types.SHOES, Types.SHOULDER],\n    drop: (item, monitor) => {\n      console.log(monitor.getItem())\n      let weapon = monitor.getItem()\n      console.log(\"This is the equipType: \" + weapon.equipType)\n      let newWeapon = {\n        name: weapon.name,\n        backgroundColor: weapon.backgroundColor,\n        atk: weapon.atk,\n        range: weapon.range,\n        armor: weapon.armor,\n        weight: weapon.weight,\n        type: weapon.equipType\n      }\n\n      let equippedIndex;\n      switch(weapon.equipType) {\n        case 'helmet':\n          equippedIndex = 0;\n          break;\n        case 'shoulder':\n          equippedIndex = 1;\n          break;\n        case 'arms':\n          equippedIndex = 2;\n          break;\n        case 'chest':\n          equippedIndex = 3;\n          break;\n        case 'shoes':\n          equippedIndex = 4;\n          break;\n        default:\n          equippedIndex = 5;\n          break;\n      }\n\n      unequip(weapon.index, newWeapon, equippedIndex);\n    }\n  })\n\n  let equipType;\n\n  return(\n    <div\n      ref={drop}\n      style={inventoryStyle}>\n      <div style={titleStyle}>INVENTORY</div>\n      <div style={inventoryGridStyle}>\n        {\n          inventory.map((item, index) => {\n            //determine what type of equipment type\n            switch(item.type){\n              case 'helmet':\n                equipType = <Helmet\n                    key={index}\n                    backgroundColor={item.backgroundColor}\n                    name={item. name}\n                    atk = {item.atk}\n                    range = {item.range}\n                    armor = {item.armor}\n                    weight = {item.weight}\n                    index={index}\n                    equipTypes={item.type}/>\n                    break;\n              case 'shoulder':\n                equipType = <Shoulders\n                    key={index}\n                    backgroundColor={item.backgroundColor}\n                    name={item.name}\n                    atk = {item.atk}\n                    range = {item.range}\n                    armor = {item.armor}\n                    weight = {item.weight}\n                    index={index}\n                    equipTypes={item.type}/>\n                    break;\n              case 'arms':\n                equipType = <Arms\n                    key={index}\n                    backgroundColor={item.backgroundColor}\n                    name={item.name}\n                    atk = {item.atk}\n                    range = {item.range}\n                    armor = {item.armor}\n                    weight = {item.weight}\n                    index={index}\n                    equipTypes={item.type}/>\n                    break;\n              case 'chest':\n                equipType = <Chest\n                    key={index}\n                    backgroundColor={item.backgroundColor}\n                    name={item.name}\n                    atk = {item.atk}\n                    range = {item.range}\n                    armor = {item.armor}\n                    weight = {item.weight}\n                    index={index}\n                    equipTypes={item.type}/>\n                    break;\n              case 'shoes':\n                equipType = <Shoes\n                    key={index}\n                    backgroundColor={item.backgroundColor}\n                    name={item.name}\n                    atk = {item.atk}\n                    range = {item.range}\n                    armor = {item.armor}\n                    weight = {item.weight}\n                    index={index}\n                    equipTypes={item.type}/>\n                    break;\n              default:\n                equipType = <Weapon\n                  key={index}\n                  backgroundColor={item.backgroundColor}\n                  name={item.name}\n                  atk = {item.atk}\n                  range = {item.range}\n                  armor = {item.armor}\n                  weight = {item.weight}\n                  index={index}\n                  equipTypes={item.type}/>\n            }\n\n            return equipType\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Inventory;\n","import { connect } from 'react-redux';\nimport { unequip } from '../Redux/actions';\n\nimport Inventory from './Inventory';\n\nconst mapStateToProps = (state) => {\n  return {\n    inventory: state.inventory\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    unequip: (index, item, equipType) => {\n      dispatch(unequip(index, item, equipType))\n    }\n  }\n}\n\nconst InventoryContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Inventory);\n\nexport default InventoryContainer\n","import React from \"react\";\n\nimport EmptyHelmetIcon from \"../SVGIcons/EmptyMetalHelmetIcon.svg\";\nimport EmptyShoulderIcon from \"../SVGIcons/EmptyShoulderIcon.svg\";\nimport EmptyArmsIcon from \"../SVGIcons/EmptyArmsIcon.svg\";\nimport EmptyChestIcon from \"../SVGIcons/EmptyChestIcon.svg\";\nimport EmptyShoesIcon from \"../SVGIcons/EmptyShoesIcon.svg\";\nimport EmptyWeaponsIcon from \"../SVGIcons/EmptySwordIcon.svg\";\n\nimport { useDrop } from \"react-dnd\";\nimport Types from \"../Types\";\nimport Weapon from \"./EquipmentTypes/Weapon\";\n//import Overlay from './Overlay';\n\nconst EquipArea = ({ equipType, equip, equipped }) => {\n  let iconToUse;\n  let row;\n  let col;\n  let equippedIndex;\n  let equipAreaType;\n\n  //determines properties of each equiparea\n  switch (equipType) {\n    case \"helmet\":\n      iconToUse = EmptyHelmetIcon;\n      row = 1;\n      col = 2;\n      equippedIndex = 0;\n      equipAreaType = Types.HELMET;\n      break;\n    case \"shoulder\":\n      iconToUse = EmptyShoulderIcon;\n      row = 1;\n      col = 1;\n      equippedIndex = 1;\n      equipAreaType = Types.SHOULDER;\n      break;\n    case \"arms\":\n      iconToUse = EmptyArmsIcon;\n      row = 2;\n      col = 1;\n      equippedIndex = 2;\n      equipAreaType = Types.ARMS;\n      break;\n    case \"chest\":\n      iconToUse = EmptyChestIcon;\n      row = 2;\n      col = 2;\n      equippedIndex = 3;\n      equipAreaType = Types.CHEST;\n      break;\n    case \"shoes\":\n      iconToUse = EmptyShoesIcon;\n      row = 3;\n      col = 2;\n      equippedIndex = 4;\n      equipAreaType = Types.SHOES;\n      break;\n    case \"weapon\":\n      iconToUse = EmptyWeaponsIcon;\n      row = 3;\n      col = 1;\n      equippedIndex = 5;\n      equipAreaType = Types.WEAPON;\n      break;\n    default:\n      break;\n  }\n\n  const equipAreaStyle = {\n    gridRowStart: row,\n    gridColumnStart: col,\n    justifySelf: \"center\",\n    position: \"relative\",\n    width: \"100px\",\n    height: \"100px\"\n  };\n\n  const equipAreaOverlay = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 200,\n    opacity: 0.5,\n    backgroundColor: \"yellow\"\n  };\n\n  //reactDND hook for dropping\n  const [{ isOver }, drop] = useDrop({\n    accept: equipAreaType,\n    drop: (item, monitor) => {\n      let weapon = monitor.getItem();\n      console.log(weapon);\n      console.log(weapon.equipType);\n      let newWeapon = {\n        name: weapon.name,\n        backgroundColor: weapon.backgroundColor,\n        atk: weapon.atk,\n        range: weapon.range,\n        armor: weapon.armor,\n        weight: weapon.weight,\n        equippedIndex: equippedIndex,\n        type: weapon.equipType\n      };\n      console.log(monitor.getItem());\n      equip(weapon.index, newWeapon, equippedIndex);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  let equipAtIndex = equipped[equippedIndex];\n\n  return (\n      <div style={equipAreaStyle} ref={drop}>\n        {equipAtIndex === \"empty\" ? (\n          <div>\n            <img alt=\"equip area to drop equips\" src={iconToUse} />\n          </div>\n        ) : (\n          <Weapon\n            backgroundColor={equipAtIndex.backgroundColor}\n            name={equipAtIndex.name}\n            atk={equipAtIndex.atk}\n            range={equipAtIndex.range}\n            armor={equipAtIndex.armor}\n            weight={equipAtIndex.weight}\n            equipTypes={equippedIndex}\n            index={equipAtIndex.index}\n          />\n        )}\n        {isOver && <div style={equipAreaOverlay} />}\n      </div>\n  );\n};\n\nexport default EquipArea;\n","import React from 'react';\n\nimport EquipArea from './EquipArea'\n\nconst Equipped = ({equip, equipped}) => {\n\n  const equippedStyle = {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'lightGrey',\n    gridRowStart: '2',\n    gridColumnStart: '5',\n    gridColumnEnd: 'span 3'\n  }\n\n  const equipGridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gridTemplateRows: 'repeat(3, 1fr)',\n    gridRowGap: '15px',\n    marginBottom: '15px'\n  }\n\n  const titleStyle = {\n    fontFamily: 'mono45-headline,monospace',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    marginTop: '10px',\n    fontSize: '50px',\n    color: \"white\",\n    opacity: \"0.5\",\n    marginBottom: '10px'\n  }\n\n  return(\n    <div\n      style={equippedStyle}>\n      <div style={titleStyle}>EQUIPPED</div>\n      <div style={equipGridStyle}>\n        <EquipArea equipType = \"helmet\" equip = {equip} equipped = {equipped}/>\n        <EquipArea equipType = \"shoulder\" equip = {equip} equipped = {equipped}/>\n        <EquipArea equipType = \"arms\" equip = {equip} equipped = {equipped}/>\n        <EquipArea equipType = \"chest\" equip = {equip} equipped = {equipped}/>\n        <EquipArea equipType = \"shoes\" equip = {equip} equipped = {equipped}/>\n        <EquipArea equipType = \"weapon\" equip = {equip} equipped = {equipped} />\n      </div>\n    </div>\n  )\n}\n\nexport default Equipped;\n","import { connect } from 'react-redux';\nimport { equip } from '../Redux/actions';\n\nimport Equipped from './Equipped';\n\nconst mapStateToProps = state => {\n  return {\n    equipped: state.equipped,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    equip: (index, item, equipType) => {\n      dispatch(equip(index, item, equipType))\n    }\n  }\n}\n\nconst EquippedContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Equipped)\n\nexport default EquippedContainer;\n","import React from 'react';\n\nconst Stats = ({equipped}) => {\n\n  const StatsStyle = {\n    width: '100%',\n    height: '60%',\n    backgroundColor: 'orange',\n    gridColumnStart: '2',\n    gridColumnEnd: 'span 3',\n    gridRowStart: '2',\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center'\n  }\n\n  const flexStatsStyle = {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexDirection: 'column',\n    fontFamily: 'mono45-headline,monospace',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    fontSize: '25px',\n    opacity: '0.7',\n    marginBottom: '10px'\n  }\n\n  const titleStyle = {\n    fontFamily: 'mono45-headline,monospace',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    fontSize: '50px',\n    marginTop: '10px',\n    marginBottom: '10px',\n    color: \"white\",\n    opacity: \"0.5\"\n  }\n\n  let atk = 0\n  let range = 0\n  let armor = 0\n  let weight = 0\n\n  //calculate ATK total\n  atk = equipped.reduce((total, weapon) => {\n    if (weapon !== 'empty') {\n      return total + Number(weapon.atk)\n    } else {\n      return total + 0\n    }\n  }, 0)\n\n  //calculate RANGE total\n  range = equipped.reduce((total, weapon) => {\n    if (weapon !== 'empty') {\n      return total + Number(weapon.range)\n    } else {\n      return total + 0\n    }\n  }, 0)\n\n  //calculate ARMOR total\n  armor = equipped.reduce((total, weapon) => {\n    if (weapon !== 'empty') {\n      return total + Number(weapon.armor)\n    } else {\n      return total + 0\n    }\n  }, 0)\n\n  //calculate WEIGHT total\n  weight = equipped.reduce((total, weapon) => {\n    if (weapon !== 'empty') {\n      return total + Number(weapon.weight)\n    } else {\n      return total + 0\n    }\n  }, 0)\n\n  return(\n    <div style={StatsStyle}>\n      <div style={titleStyle}>STATS</div>\n      <div style={flexStatsStyle}>\n        <div>ATK: {atk}</div>\n        <div>RANGE: {range}</div>\n        <div>ARMOR: {armor}</div>\n        <div>WEIGHT: {weight}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Stats\n","import { connect } from 'react-redux'\n\nimport Stats from './Stats'\n\nconst mapStateToProps = (state) => {\n  return {\n    equipped: state.equipped\n  }\n}\n\nconst StatsContainer = connect(\n  mapStateToProps\n)(Stats)\n\nexport default StatsContainer\n","import React from 'react';\n\nconst Header = () => {\n\n    const headerStyle = {\n        width: '100%',\n        display: 'flex',\n        height: '100px',\n        gridColumnEnd: 'span 8',\n        backgroundColor: 'brown',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n\n    const headerTitleStyle = {\n        fontFamily: 'mono45-headline,monospace',\n        margin: 0,\n        fontSize: '100px',\n        fontWeight: '400',\n        fontStyle: 'normal',\n        color: \"white\",\n        opacity: \"0.5\",\n    }\n\n    return(\n        <div style={headerStyle}>\n            <h1 style={headerTitleStyle}>EQUIPS</h1>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react';\nimport './App.css';\n\nimport InventoryContainer from './Components/InventoryContainer'\nimport EquippedContainer from './Components/EquippedContainer'\nimport StatsContainer from './Components/StatsContainer'\n\nimport { DndProvider } from 'react-dnd'\nimport Backend from 'react-dnd-html5-backend'\n\nimport Header from './Components/Header'\n\nfunction App() {\n\n  const containerGridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(8, 1fr)',\n    gridTemplateRows: 'auto auto auto',\n    gridRowGap: '15px',\n    gridColumnGap: '20px'\n  }\n\n  return (\n    <div className=\"App\" style={containerGridStyle}>\n      <DndProvider backend = {Backend}>\n        <Header />\n        <InventoryContainer />\n        <EquippedContainer />\n        <StatsContainer />\n      </DndProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  EQUIP,\n  UNEQUIP\n} from './actions'\n\n//create the inital state\nconst initialState = {\n  inventory: [\n    {\n      name: \"sword\",\n      backgroundColor: 'red',\n      atk: 3,\n      range: 2,\n      armor: 0,\n      weight: 10,\n      type: 'weapon'\n    },\n    {\n      name: 'spear',\n      backgroundColor: 'pink',\n      atk: 2,\n      range: 3,\n      armor: 0,\n      weight: 5,\n      type: 'weapon'\n    },\n    {\n      name: 'dagger',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 0,\n      weight: 3,\n      type: 'weapon'\n    },\n    {\n      name: 'axe',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 0,\n      weight: 15,\n      type: 'weapon'\n    },\n    {\n      name: 'bow',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 0,\n      weight: 5,\n      type: 'weapon'\n    },\n    {\n      name: 'metalHelmet',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 5,\n      weight: 10,\n      type: 'helmet'\n    },\n    {\n      name: 'metalShoulder',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 3,\n      weight: 10,\n      type: 'shoulder'\n    },\n    {\n      name: 'metalChest',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 7,\n      weight: 15,\n      type: 'chest'\n    },\n    {\n      name: 'metalArms',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 3,\n      weight: 7,\n      type: 'arms'\n    },\n    {\n      name: 'metalShoes',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      type: 'shoes',\n      armor: 5,\n      weight: 7,\n    },\n    {\n      name: 'leatherHelmet',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 3,\n      weight: 5,\n      type: 'helmet'\n    },\n    {\n      name: 'leatherShoulder',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 3,\n      weight: 5,\n      type: 'shoulder'\n    },\n    {\n      name: 'leatherVest',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 5,\n      weight: 5,\n      type: 'chest'\n    },\n    {\n      name: 'leatherArms',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 3,\n      weight: 3,\n      type: 'arms'\n    },\n    {\n      name: 'leatherShoes',\n      backgroundColor: 'darkRed',\n      atk: 1,\n      range: 1,\n      armor: 3,\n      weight: 3,\n      type: 'shoes'\n    }\n  ],\n  equipped: ['empty', 'empty', 'empty', 'empty', 'empty', 'empty']\n}\n\n//function to prevent duplication of items that are redropped in inventory\nlet checkDupeInventory = (state, action) => {\n  let itemToCheck = action.item.name;\n  let checkDupes = state.inventory.filter(item => item.name === itemToCheck);\n  if (checkDupes.length !== 0) {\n    return state.inventory\n  } else {\n    return [...state.inventory, action.item]\n  }\n}\n\n//check dupe in equipped\nlet checkDupeEquipped = (state, action) => {\n  let itemToCheck = action.item.name;\n  let checkDupes = state.inventory.filter(item => item.name === itemToCheck);\n  if (checkDupes.length !== 0) {\n    return state.equipped\n  } else {\n    return state.equipped.map((item, index) => {\n      if (index !== action.equipType) {\n        return item;\n      }\n      return 'empty'\n    })\n  }\n}\n\n//function to unequip something if something of the same type is put over it\nlet checkIfSomethingEquipped = (state, action) => {\n  if (state.equipped[action.equipType] !== 'empty') {\n    return {\n      ...state,\n      inventory: [...state.inventory.slice(0, action.index), ...state.inventory.slice(action.index + 1), state.equipped[action.equipType]],\n      equipped: [...state.equipped.slice(0, action.equipType), action.item, ...state.equipped.slice(action.equipType + 1)]\n    }\n  } else {\n    return {\n      ...state,\n      inventory: [...state.inventory.slice(0, action.index), ...state.inventory.slice(action.index + 1)],\n      equipped: [...state.equipped.slice(0, action.equipType), action.item, ...state.equipped.slice(action.equipType + 1)]\n    }\n  }\n}\n\n//reducer\nfunction equips(state = initialState, action) {\n  switch (action.type) {\n    case EQUIP:\n      return Object.assign({}, state, checkIfSomethingEquipped(state, action))\n    case UNEQUIP:\n      return Object.assign({}, state, {\n        ...state,\n        inventory: checkDupeInventory(state, action),\n        equipped: checkDupeEquipped(state, action)\n      })\n    default:\n      return state\n  }\n}\n\nexport default equips;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport equips from './Redux/reducers';\n\nconst store = createStore(equips);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}